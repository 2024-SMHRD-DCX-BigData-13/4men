<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.model.MemberDAO">
	<!-- namespace 속성을 이용해서 DAO랑 짝을 맞춰줄 것 -->
	
	<!-- 1. Member테이블에 회원 정보 저장 -->
	<!-- 사용하고자 하는 SQL문의 키워드와 같은 태그를 사용 -->
	<!-- Sql문 작성시 엔터 가능 단 ;은 찍지 않음 -->
	<!-- Sql문 사이에 변수 값을 넣고 싶을 때,
			#{변수명} 양식으로 작성
	 -->
	 <!-- parameterType : 각 변수들을 어떤 객체로 묶어서 넣어줄지 -->
	 <!-- id : sql문 구분, DAO에서 id를 이용해서 sql문을 실행 -->
	 <!-- 회원가입 -->
	<insert id="join" parameterType="com.smhrd.model.Member">
		insert into member (user_id, password, name, birthday, gender, phone_number)
		values(
			#{user_id},
			#{password},
			#{name},
			#{birthday},
			#{gender},
			#{phone_number}
		)
	</insert>
	
	<!-- 2. 로그인 조회 -->
	<!-- resultType : select 필수**
					  select 결과를 어떤 자료형으로 옮겨 담을지 지정
		*** 조건 : 테이블 컬럼명 == 필드 변수명
				   기본 생성자가 있어야 함
				   setter가 있어야함
	 -->
	<select id="login" resultType="com.smhrd.model.Member" parameterType="com.smhrd.model.Member">
		select * from member
		where user_id = #{user_id}
		and password = #{password}
	</select>

	<!-- 3. 회원 정보 수정 -->
	<update id="update" parameterType="com.smhrd.model.Member">
		update member
		set pw = #{pw},
			tel = #{tel},
			address = #{address}
		where user_id = #{user_id}
	</update>
	
	<!-- 4. 전체 회원 조회 -->
	<select id="select" resultType="com.smhrd.model.Member">
		select * from member
	</select>

	<!-- 5. 이메일 중복 체크 -->
	<select id="check" resultType="com.smhrd.model.Member">
		select * from member
		where user_id = #{user_id}
	</select>
	
	<!-- 6. ID찾기 -->
	<select id="find" resultType="com.smhrd.model.Member" parameterType="com.smhrd.model.Member">
		select user_id from member
		where name = #{name}
		and birthday = #{birthday}
		and phone_number = #{phone_number}
	</select>





</mapper>